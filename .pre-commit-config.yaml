# Pre-commit hooks for DICOM-Fuzzer
# Modern 2025 approach: Ruff (replaces Black, isort, flake8, bandit) + mypy
# See https://pre-commit.com for more information
#
# Run manually: pre-commit run --all-files
# Install: pre-commit install

repos:
  # Ruff - Fast Python linter and formatter (replaces Black, isort, flake8)
  # https://github.com/astral-sh/ruff-pre-commit
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.14.1
    hooks:
      # Run the linter with automatic fixes
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        types_or: [python, pyi]
      # Run the formatter (replaces Black)
      - id: ruff-format
        types_or: [python, pyi]

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        additional_dependencies:
          - pydantic>=2.0.0
          - pydicom>=2.4.0
          - types-aiofiles>=25.0.0
        args:
          - --config-file=pyproject.toml
          - --ignore-missing-imports
        exclude: ^(tests/|examples/|demo/|scripts/)

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      # Prevent commits to protected branches
      - id: no-commit-to-branch
        args: [--branch, main]
      # File size and format checks
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-toml
      - id: check-yaml
        args: [--unsafe] # Allow custom tags in GitHub Actions
      - id: check-json
      - id: end-of-file-fixer
        exclude: ^(artifacts/|data/|\.hypothesis/|\.pytest_cache/)
      - id: trailing-whitespace
        exclude: ^(artifacts/|data/|\.hypothesis/|\.pytest_cache/)
        args: [--markdown-linebreak-ext=md]
      - id: mixed-line-ending
        args: [--fix=lf]
      # Python-specific checks
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]
      # Security
      - id: detect-private-key

  # Security scanning with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: "1.8.0"
    hooks:
      - id: bandit
        args: [-c, pyproject.toml, -r, dicom_fuzzer/]
        additional_dependencies: ["bandit[toml]"]
        exclude: ^tests/

  # Markdown and YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [markdown, yaml, json]
        exclude: ^(CHANGELOG\.md|\.github/|artifacts/|data/)

  # Local pytest check (run on push only to avoid slowing down commits)
  - repo: local
    hooks:
      - id: pytest-quick
        name: pytest-quick
        entry: pytest
        language: system
        pass_filenames: false
        stages: [pre-push]
        args: [tests/, --tb=short, -q, --no-cov, -x]

# Configuration
default_language_version:
  python: python3.13  # Python 3.14 is alpha, use stable 3.13

# CI settings
ci:
  autofix_commit_msg: |
    style: auto-fix pre-commit hooks

    [pre-commit.ci] auto fixes from pre-commit hooks
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "chore: pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: [pytest-quick] # Skip pytest in CI (covered by GitHub Actions)
  submodules: false
